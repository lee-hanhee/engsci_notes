\babel@toc {english}{}\relax 
\contentsline {figure}{\numberline {1}{\ignorespaces Graphical examples of the Big-O, Big-Omega, and Big-Theta.}}{9}{figure.1}%
\contentsline {figure}{\numberline {2}{\ignorespaces Merge sort visualization.}}{22}{figure.2}%
\contentsline {figure}{\numberline {3}{\ignorespaces Recursion tree that is made by subbing in the $T(\#)$ into the recurrence relation to get the nodes below.}}{26}{figure.3}%
\contentsline {figure}{\numberline {4}{\ignorespaces (a) Directed graph, (b) Undirected graph.}}{27}{figure.4}%
\contentsline {figure}{\numberline {5}{\ignorespaces (i) Directed graph, (ii) Adjacency matrix, (iii) Adjacency list}}{28}{figure.5}%
\contentsline {figure}{\numberline {6}{\ignorespaces Bipartite graph.}}{29}{figure.6}%
\contentsline {figure}{\numberline {7}{\ignorespaces (a) A free tree, (b) A forest, (c) a graph that contains a cycle and is therefore neither a tree nor a forest.}}{31}{figure.7}%
\contentsline {figure}{\numberline {8}{\ignorespaces Rooted and ordered trees. If the tree is ordered, the relative left-to-right order of the children of a node matters, but if rooted, then they are the same tree.}}{31}{figure.8}%
\contentsline {figure}{\numberline {9}{\ignorespaces (Left) Tree format heap. (Right) Array format heap with formulas for parent and children.}}{41}{figure.9}%
\contentsline {figure}{\numberline {10}{\ignorespaces Bubble down.}}{43}{figure.10}%
\contentsline {figure}{\numberline {11}{\ignorespaces (a) Max-heap data structure after Build-Heap. (b)-(j) Extract max. (k) Sorted array.}}{44}{figure.11}%
\contentsline {figure}{\numberline {12}{\ignorespaces Build heap.}}{45}{figure.12}%
\contentsline {figure}{\numberline {13}{\ignorespaces Quicksort example.}}{47}{figure.13}%
\contentsline {figure}{\numberline {14}{\ignorespaces Quicksort average case in which each level is derived by subbing in the $T(\#)$ back into the equation above.}}{48}{figure.14}%
